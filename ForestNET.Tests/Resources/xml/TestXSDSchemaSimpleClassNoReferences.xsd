<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mc="https://www.forestany.net" xsi:schemaLocation="https://www.forestany.net ./forestNetXML.xsd" elementFormDefault="qualified" attributeFormDefault="unqualified">

<xs:element name="SimpleClassCollection" mc:mapping="ForestNET.Tests.IO.Data+SimpleClassCollection, ForestNET.Tests">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="SimpleClasses" mc:mapping="SimpleClasses:ArrayList(ForestNET.Tests.IO.Data+SimpleClass, ForestNET.Tests)">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SimpleClass" mc:mapping="ForestNET.Tests.IO.Data+SimpleClass, ForestNET.Tests" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ValueC" type="xs:string" minOccurs="0" mc:mapping="ValueA"/>
									<xs:element name="ValueQ" mc:mapping="ValueE:float[]" minOccurs="0">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="float" type="xs:float" minOccurs="0" maxOccurs="unbounded"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
									<xs:element name="ValueD" type="xs:string" minOccurs="0" mc:mapping="ValueB"/>
									<xs:element name="ValueC" type="xs:string" minOccurs="0" mc:mapping="ValueC"/>
									<xs:element name="ValueB" mc:mapping="ValueD:ArrayList(integer)" minOccurs="0">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="integer" type="xs:integer" minOccurs="0" maxOccurs="unbounded"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:element>

</xs:schema> 