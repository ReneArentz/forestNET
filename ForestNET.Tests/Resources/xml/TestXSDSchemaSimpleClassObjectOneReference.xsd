<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mc="https://www.forestany.net" xsi:schemaLocation="https://www.forestany.net ./forestNetXML.xsd" elementFormDefault="qualified" attributeFormDefault="unqualified">

<!-- definition of simple elements -->
<xs:element name="ValueA" type="xs:string" mc:mapping="ValueA"/>
<xs:element name="ValueB" type="xs:string" mc:mapping="ValueB"/>
<xs:element name="ValueC" type="xs:string" mc:mapping="ValueC"/>
	
<!-- definition of attributes -->

<!-- definition of complex elements -->
<xs:element name="ValueD" mc:mapping="ValueD:ArrayList(integer)">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="integer" type="xs:integer" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>

<xs:element name="ValueE" mc:mapping="ValueE:float[]" minOccurs="0">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="float" type="xs:float" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>

<xs:element name="SimpleClass" mc:mapping="ForestNET.Tests.IO.Data+SimpleClass, ForestNET.Tests">
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="ValueA" minOccurs="0"/>
			<xs:element ref="ValueB" minOccurs="0"/>
			<xs:element ref="ValueC" minOccurs="0"/>
			<xs:element ref="ValueD" minOccurs="0"/>
			<xs:element ref="ValueE" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>

<xs:element name="SimpleClasses" mc:mapping="SimpleClasses:ArrayList(ForestNET.Tests.IO.Data+SimpleClass, ForestNET.Tests)">
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="SimpleClass" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>

<xs:element name="SimpleClassCollection" mc:mapping="ForestNET.Tests.IO.Data+SimpleClassCollection, ForestNET.Tests">
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="SimpleClasses"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>

</xs:schema> 